# pod-with-configmap.yaml
# Example: Using ConfigMap as environment variables

apiVersion: v1
kind: Pod
metadata:
  name: app-with-env-config
  labels:
    app: demo
spec:
  containers:
  - name: app
    image: busybox:1.36
    command: 
    - sh
    - -c
    - |
      echo "=== Application Configuration ==="
      echo "App Name: $APP_NAME"
      echo "Log Level: $LOG_LEVEL"
      echo "Max Connections: $MAX_CONNECTIONS"
      echo "=== Running ==="
      sleep 3600
    
    # Environment variables from ConfigMap
    env:
    - name: APP_NAME
      valueFrom:
        configMapKeyRef:
          name: app-config
          key: app_name
    
    - name: LOG_LEVEL
      valueFrom:
        configMapKeyRef:
          name: app-config
          key: log_level
    
    - name: MAX_CONNECTIONS
      valueFrom:
        configMapKeyRef:
          name: app-config
          key: max_connections
    
    # Alternative: Load all keys as env vars
    # envFrom:
    # - configMapRef:
    #     name: app-config

# Create ConfigMap first:
# kubectl create configmap app-config \
#   --from-literal=app_name="My Awesome App" \
#   --from-literal=log_level="debug" \
#   --from-literal=max_connections="100"
#
# Then apply this pod:
# kubectl apply -f pod-with-configmap.yaml
#
# Check logs:
# kubectl logs app-with-env-config
