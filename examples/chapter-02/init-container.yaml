# init-container.yaml
# Example: Init containers for setup tasks

apiVersion: v1
kind: Pod
metadata:
  name: init-demo
  labels:
    example: init-containers
spec:
  # Init containers run before main containers
  # They run sequentially, must complete successfully
  initContainers:
  - name: wait-for-service
    image: busybox:1.36
    command: ['sh', '-c']
    args:
    - |
      echo "Waiting for required service..."
      until nslookup kubernetes.default; do
        echo "Service not ready, waiting..."
        sleep 2
      done
      echo "Service found, proceeding..."
  
  - name: setup-data
    image: busybox:1.36
    command: ['sh', '-c']
    args:
    - |
      echo "Setting up initial data..."
      mkdir -p /work-dir
      echo "Initialization complete" > /work-dir/ready.txt
      cat /work-dir/ready.txt
    volumeMounts:
    - name: workdir
      mountPath: /work-dir
  
  # Main containers start only after all init containers succeed
  containers:
  - name: app
    image: busybox:1.36
    command: ['sh', '-c']
    args:
    - |
      echo "App starting..."
      cat /work-dir/ready.txt
      echo "App running, sleeping..."
      sleep 3600
    volumeMounts:
    - name: workdir
      mountPath: /work-dir
  
  volumes:
  - name: workdir
    emptyDir: {}

# Usage:
# kubectl apply -f init-container.yaml
# kubectl get pod init-demo --watch
# kubectl logs init-demo -c wait-for-service
# kubectl logs init-demo -c setup-data
# kubectl logs init-demo -c app
